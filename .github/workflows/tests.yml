name: Tests

on: [push]

jobs:

  test_meta_project_with_svn_externals:
    # https://github.com/fiedl/icecube-git-migration/issues/2

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: "Create project svn repository"
      run: |
        cd demo/svn_server
        docker-compose run svn svnadmin create my_project_svn_repo
    - name: "Make the project svn repository writable"
      run: |
        cd demo/svn_server
        docker-compose run svn sh -c "cd /var/opt/svn/my_project_svn_repo/conf && echo '[general]
        anon-access = write' >> svnserve.conf"
    - name: "Run the svn server in the background"
      run: |
        cd demo/svn_server
        docker-compose up --detach svn
    - name: "Import test file into the project svn repository"
      run: |
        cd demo/svn_server/my_project_svn_repo
        svn import svn://localhost/my_project_svn_repo -m "initial import"
    - name: "Create meta-project svn repository"
      run: |
        cd demo/svn_server
        docker-compose run svn svnadmin create my_meta_project_svn_repo
    - name: "Make the meta-project svn repository writable"
      run: |
        cd demo/svn_server
        docker-compose run svn sh -c "cd /var/opt/svn/my_meta_project_svn_repo/conf && echo '[general]
        anon-access = write' >> svnserve.conf"
    - name: "Import an empty projects folder into the meta-project repository"
      run: |
        mkdir my_meta_project_svn_repo
        cd my_meta_project_svn_repo
        mkdir projects
        svn import svn://localhost/my_meta_project_svn_repo -m "initial import of an empty projects folder"
    - name: "Svn checkout the meta project"
      run: |
        rm -rf my_meta_project_svn_repo
        mkdir my_meta_project_svn_repo
        cd my_meta_project_svn_repo
        svn co svn://localhost/my_meta_project_svn_repo .
    - name: "Add project svn repository as svn external for the meta-project repository"
      run: |
        cd my_meta_project_svn_repo
        svn propset svn:externals "my_project_svn_repo svn://localhost/my_project_svn_repo" projects
        svn commit -m "linking projects/my_project_svn_repo as svn external"
        svn update
    - name: "Add public github repository as svn external for the meta-project repository"
      run: |
        cd my_meta_project_svn_repo
        svn propset svn:externals "my_project_svn_repo svn://localhost/my_project_svn_repo
        clsim https://github.com/claudiok/clsim.git/trunk" projects
        svn commit -m "linking projects/clsim as svn external to a public github repo"
        svn update
    - name: "Cache svn credentials for github.com"
      run: |
        echo "store-passwords = yes
        store-plaintext-passwords = yes" >> ~/.subversion/servers
        svn ls --username $GITHUB_USERNAME --password $GITHUB_ACCESS_TOKEN https://github.com/IceCube-SPNO/IceTrayCombo.git/trunk/monopole-generator
      env:
        GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME }}
        GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_ACCESS_TOKEN }}
    - name: "Check if svn credentials are available"
      run: |
        svn auth https://github.com
    - name: "Add a private github repository's folder as svn external for the meta-project repository"
      run: |
        cd my_meta_project_svn_repo
        svn propset svn:externals "my_project_svn_repo svn://localhost/my_project_svn_repo
        clsim https://github.com/claudiok/clsim.git/trunk
        monopole-generator https://github.com/IceCube-SPNO/IceTrayCombo.git/trunk/monopole-generator" projects
        svn commit -m "linking projects/monopole-generator as svn external to a private github-repo folder"
        svn update
    - name: "Svn checkout the meta-project repository and see if the external project is there"
      run: |
        rm -rf my_meta_project_svn_repo
        mkdir my_meta_project_svn_repo
        cd my_meta_project_svn_repo
        svn co svn://localhost/my_meta_project_svn_repo .

        ls projects/my_project_svn_repo
        ls projects/clsim
        ls projects/monopole-generator

  test_changing_an_svn_external:
    # https://github.com/fiedl/icecube-git-migration/issues/4#issuecomment-599601267

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: "Create project svn repository"
      run: |
        cd demo/svn_server
        docker-compose run svn svnadmin create my_project_svn_repo
    - name: "Make the project svn repository writable"
      run: |
        cd demo/svn_server
        docker-compose run svn sh -c "cd /var/opt/svn/my_project_svn_repo/conf && echo '[general]
        anon-access = write' >> svnserve.conf"
    - name: "Run the svn server in the background"
      run: |
        cd demo/svn_server
        docker-compose up --detach svn
    - name: "Import test file into the project svn repository"
      run: |
        cd demo/svn_server/my_project_svn_repo
        svn import svn://localhost/my_project_svn_repo -m "initial import"
    - name: "Create meta-project svn repository"
      run: |
        cd demo/svn_server
        docker-compose run svn svnadmin create my_meta_project_svn_repo
    - name: "Make the meta-project svn repository writable"
      run: |
        cd demo/svn_server
        docker-compose run svn sh -c "cd /var/opt/svn/my_meta_project_svn_repo/conf && echo '[general]
        anon-access = write' >> svnserve.conf"
    - name: "Import an empty projects folder into the meta-project repository"
      run: |
        mkdir my_meta_project_svn_repo
        cd my_meta_project_svn_repo
        mkdir projects
        svn import svn://localhost/my_meta_project_svn_repo -m "initial import of an empty projects folder"
    - name: "Svn checkout the meta project"
      run: |
        rm -rf my_meta_project_svn_repo
        mkdir my_meta_project_svn_repo
        cd my_meta_project_svn_repo
        svn co svn://localhost/my_meta_project_svn_repo .
    - name: "Add project svn repository as svn external for the meta-project repository"
      run: |
        cd my_meta_project_svn_repo
        svn propset svn:externals "my_project_svn_repo svn://localhost/my_project_svn_repo" projects
        svn commit -m "linking projects/my_project_svn_repo as svn external"
        svn update
    - name: "Check if the external project is there"
      run: |
        cd my_meta_project_svn_repo
        ls projects/my_project_svn_repo
    - name: "Cache svn credentials for github.com"
      run: |
        echo "store-passwords = yes
        store-plaintext-passwords = yes" >> ~/.subversion/servers
        svn ls --username $GITHUB_USERNAME --password $GITHUB_ACCESS_TOKEN https://github.com/IceCube-SPNO/IceTrayCombo.git/trunk/monopole-generator
      env:
        GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME }}
        GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_ACCESS_TOKEN }}
    - name: "Change the source of the svn external to be the same folder on github"
      run: |
        cd my_meta_project_svn_repo
        svn propset svn:externals "my_project_svn_repo https://github.com/fiedl/icecube-git-migration.git/trunk/demo/svn_server/my_project_svn_repo" projects
        svn commit -m "linking projects/my_project_svn_repo as svn external to github"
        svn update
    - name: "Check if the external project is there"
      run: |
        cd my_meta_project_svn_repo
        ls projects/my_project_svn_repo

  test_switching_a_folder_to_an_svn_external:
    # https://github.com/fiedl/icecube-git-migration/issues/10

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: "Create legacy svn repository"
      run: |
        cd demo/svn_server
        docker-compose run svn svnadmin create legacy_svn_repo
    - name: "Make the project svn repository writable"
      run: |
        cd demo/svn_server
        docker-compose run svn sh -c "cd /var/opt/svn/legacy_svn_repo/conf && echo '[general]
        anon-access = write' >> svnserve.conf"
    - name: "Run the svn server in the background"
      run: |
        cd demo/svn_server
        docker-compose up --detach svn
    - name: "Import a combo folder into the legacy svn repository"
      run: |
        mkdir legacy_svn_repo
        cd legacy_svn_repo
        mkdir -p meta-projects/combo
        touch meta-projects/combo/test
        svn import svn://localhost/legacy_svn_repo -m "initial import of legacy repo with combo folder"
    - name: "Svn checkout the combo folder of the legacy repo"
      run: |
        rm -rf legacy_svn_repo
        mkdir legacy_svn_repo
        cd legacy_svn_repo
        svn co svn://localhost/legacy_svn_repo/meta-projects/combo .
    - name: "Check if the test file is there"
      run: |
        cd legacy_svn_repo
        ls test
    - name: "Add git combo repo as svn external to the legacy repository"
      run: |
        svn co svn://localhost/legacy_svn_repo another_copy_of_legacy_svn_repo
        cd another_copy_of_legacy_svn_repo
        svn delete meta-projects/combo
        svn propset svn:externals "combo https://github.com/IceCube-SPNO/IceTrayCombo.git/trunk" meta-projects
        svn commit -m "linking combo from github as svn external"
    - name: "Cache svn credentials for github.com"
      run: |
        echo "store-passwords = yes
        store-plaintext-passwords = yes" >> ~/.subversion/servers
        svn ls --username $GITHUB_USERNAME --password $GITHUB_ACCESS_TOKEN https://github.com/IceCube-SPNO/IceTrayCombo.git/trunk/monopole-generator
      env:
        GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME }}
        GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_ACCESS_TOKEN }}
    - name: "Update the locally checked out svn combo"
      run: |
        cd legacy_svn_repo
        svn update
    - name: "Check if the combo files from github are there"
      run: |
        cd legacy_svn_repo
        ls
        ls clsim
        ls monopole-generator

  test_multiple_redirects_with_svn_externals:
    # https://github.com/fiedl/icecube-git-migration/issues/4#issue-582378383

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: "Run the svn server in the background"
      run: |
        cd demo/svn_server
        docker-compose up --detach svn
    - name: "Create combo meta-project svn repository"
      run: |
        cd demo/svn_server
        docker-compose run svn svnadmin create combo
    - name: "Make the meta-project svn repository writable"
      run: |
        cd demo/svn_server
        docker-compose run svn sh -c "cd /var/opt/svn/combo/conf && echo '[general]
        anon-access = write' >> svnserve.conf"
    - name: "Import empty projects folder into the combo meta-project repository"
      run: |
        mkdir combo
        cd combo
        mkdir projects
        svn import svn://localhost/combo -m "initial import of an empty projects folder"
    - name: "Svn checkout the combo meta project"
      run: |
        rm -rf combo
        mkdir combo
        cd combo
        svn co svn://localhost/combo .
    - name: "Add github combo clsim as svn external in the projects folder"
      run: |
        cd combo
        svn propset svn:externals "clsim https://github.com/IceCube-SPNO/IceTrayCombo.git/trunk/clsim" projects
        svn commit -m "linking github combo clsim as svn external"
    - name: "Create another meta-project svn repository"
      run: |
        cd demo/svn_server
        docker-compose run svn svnadmin create my_meta_project_svn_repo
    - name: "Make the meta-project svn repository writable"
      run: |
        cd demo/svn_server
        docker-compose run svn sh -c "cd /var/opt/svn/my_meta_project_svn_repo/conf && echo '[general]
        anon-access = write' >> svnserve.conf"
    - name: "Import empty meta-projects folder into the meta-project repository"
      run: |
        mkdir my_meta_project_svn_repo
        cd my_meta_project_svn_repo
        mkdir meta-projects
        svn import svn://localhost/my_meta_project_svn_repo -m "initial import of an empty projects folder"
    - name: "Svn checkout the meta project"
      run: |
        rm -rf my_meta_project_svn_repo
        mkdir my_meta_project_svn_repo
        cd my_meta_project_svn_repo
        svn co svn://localhost/my_meta_project_svn_repo .
    - name: "Cache svn credentials for github.com"
      run: |
        echo "store-passwords = yes
        store-plaintext-passwords = yes" >> ~/.subversion/servers
        svn ls --username $GITHUB_USERNAME --password $GITHUB_ACCESS_TOKEN https://github.com/IceCube-SPNO/IceTrayCombo.git/trunk/monopole-generator
      env:
        GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME }}
        GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_ACCESS_TOKEN }}
    - name: "Add combo as svn external in the meta-projects folder"
      run: |
        cd my_meta_project_svn_repo
        svn propset svn:externals "combo svn://localhost/combo" meta-projects
        svn commit -m "linking combo svn external"
    - name: "Svn checkout the meta-project repository and see if the external project is there"
      run: |
        rm -rf my_meta_project_svn_repo
        mkdir my_meta_project_svn_repo
        cd my_meta_project_svn_repo
        svn co svn://localhost/my_meta_project_svn_repo .

        ls meta-projects
        ls meta-projects/combo
        ls meta-projects/combo/projects
        ls meta-projects/combo/projects/clsim

  test_meta_project_with_gitman:
    # https://github.com/fiedl/icecube-git-migration/issues/2

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup python
      uses: actions/setup-python@v1
      with:
        python-version: 3.x
    - name: "Install git-svn"
      run: sudo apt-get install -y git-svn
    - name: "Install gitman"
      run: pip install gitman
    - name: "Cache svn credentials for github.com"
      run: |
        svn ls https://github.com/claudiok/clsim.git/trunk
        echo "store-passwords = yes
        store-plaintext-passwords = yes" >> ~/.subversion/servers
        svn ls --username $GITHUB_USERNAME --password $GITHUB_ACCESS_TOKEN https://github.com/IceCube-SPNO/IceTrayCombo.git/trunk/monopole-generator
      env:
        GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME }}
        GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_ACCESS_TOKEN }}
    - name: "Fetch the source code of all projects of a meta project with gitman"
      run: |
        cd demo/meta_project_with_gitman
        cat gitman.yml
        gitman update --force
    - name: "Check if the code of the external projects is there"
      run: |
        cd demo/meta_project_with_gitman/projects
        ls clsim
        ls monopole-generator
